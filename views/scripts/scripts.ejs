<script>
    // Permite apenas números, limita o tamanho a 14 digitos
    function validateNumberLength(input, length) {
        input.value = input.value.replace(/\D/g, '').slice(0, length);
    };
</script>

<script>
    function validateDates() {
        const dtInicioCampanha = document.querySelector('input[name="dtInicioCampanha"]').value;
        const dtFimCampanha = document.querySelector('input[name="dtFimCampanha"]').value;

        if (dtFimCampanha < dtInicioCampanha) {
            alert('A data de fim da campanha não pode ser antes da data de início da campanha.');
            return false;
        }

        return true;
    }

    function validateCPF(cpf) {
        cpf = cpf.replace(/[^\d]+/g, ''); // Remove non-numeric characters

        if (cpf.length !== 11 || /^(\d)\1+$/.test(cpf)) {
            return false; // Check if CPF length is 11 and not all digits are the same
        }

        let sum = 0;
        let remainder;

        // Validate first digit
        for (let i = 1; i <= 9; i++) {
            sum += parseInt(cpf.substring(i - 1, i)) * (11 - i);
        }
        remainder = (sum * 10) % 11;

        if ((remainder === 10) || (remainder === 11)) {
            remainder = 0;
        }
        if (remainder !== parseInt(cpf.substring(9, 10))) {
            return false;
        }

        sum = 0;

        // Validate second digit
        for (let i = 1; i <= 10; i++) {
            sum += parseInt(cpf.substring(i - 1, i)) * (12 - i);
        }
        remainder = (sum * 10) % 11;

        if ((remainder === 10) || (remainder === 11)) {
            remainder = 0;
        }
        if (remainder !== parseInt(cpf.substring(10, 11))) {
            return false;
        }

        return true;
    }

    function validateCNPJ(cnpj) {
        cnpj = cnpj.replace(/[^\d]+/g, ''); // Remove non-numeric characters

        if (cnpj.length !== 14) {
            return false; // CNPJ must be 14 digits long
        }

        // Validate CNPJ using checksum algorithm
        let length = cnpj.length - 2;
        let numbers = cnpj.substring(0, length);
        let digits = cnpj.substring(length);
        let sum = 0;
        let pos = length - 7;

        for (let i = length; i >= 1; i--) {
            sum += numbers.charAt(length - i) * pos--;
            if (pos < 2) pos = 9;
        }

        let result = sum % 11 < 2 ? 0 : 11 - sum % 11;
        if (result != digits.charAt(0)) {
            return false;
        }

        length = length + 1;
        numbers = cnpj.substring(0, length);
        sum = 0;
        pos = length - 7;

        for (let i = length; i >= 1; i--) {
            sum += numbers.charAt(length - i) * pos--;
            if (pos < 2) pos = 9;
        }

        result = sum % 11 < 2 ? 0 : 11 - sum % 11;
        if (result != digits.charAt(1)) {
            return false;
        }

        return true;
    }

    function validateCandidato() {
        const cpfInput = document.querySelector('input[name="cpfAdmFinanceiro"]').value;
        const cnpjInput = document.querySelector('input[name="cnpj"]').value;

        if (!validateCPF(cpfInput)) {
            alert('CPF inválido.');
            return false; // Prevent form submission if CPF is invalid
        }

        if (!validateCNPJ(cnpjInput)) {
            alert('CNPJ inválido.');
            return false; // Prevent form submission if CNPJ is invalid
        }

        if (!validateDates()) {
            return false; // Prevent form submission if dates are invalid
        }

        return true;
    }
</script>

<script>
    function checkCandidato() {
        const nrCandidato = document.querySelector('input[name="nrCandidato"]').value;
        const messageDiv = document.getElementById('candidato-message');

        fetch(`/api/check-candidato?nrCandidato=${nrCandidato}`)
            .then(response => response.json())
            .then(data => {
                if (data.exists) {
                    // Added code to display the candidate's name
                    messageDiv.innerHTML = `<span class="text-success">Candidato: ${data.nmCandidato}</span>`;
                } else {
                    // Modified error message for candidate not found
                    messageDiv.innerHTML = '<span class="text-danger">Candidato não encontrado.</span>';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                messageDiv.innerHTML = '<span class="text-danger">Erro ao verificar candidato.</span>';
            });
    }
</script>